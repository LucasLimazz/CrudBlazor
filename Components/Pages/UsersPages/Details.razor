@page "/users/details"
@inject CrudBlazor.Data.AppDbContext DB
@using CrudBlazor.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Visualizar</PageTitle>

<h1>Visualização</h1>

<div>
    <h4>Usuário</h4>
    <hr />
    @if (users is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@users.Nome</dd>
            <dt class="col-sm-2">Idade</dt>
            <dd class="col-sm-10">@users.Idade</dd>
            <dt class="col-sm-2">CPF</dt>
            <dd class="col-sm-10">@users.CPF</dd>
            <dt class="col-sm-2">Endereço</dt>
            <dd class="col-sm-10">@users.Endereco</dd>
            <dt class="col-sm-2">CEP</dt>
            <dd class="col-sm-10">@users.CEP</dd>
            <dt class="col-sm-2">Cidade</dt>
            <dd class="col-sm-10">@users.Cidade</dd>
            <dt class="col-sm-2">Estado</dt>
            <dd class="col-sm-10">@users.Estado</dd>
        </dl>
        <div>
            <a href="@($"/users/edit?id={users.Id}")">Editar usuário</a> |
            <a href="@($"/users")">Voltar para Lista</a>
        </div>
    }
</div>

@code {
    Users? users;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        users = await DB.Usuarios.FirstOrDefaultAsync(m => m.Id == Id);

        if (users is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
