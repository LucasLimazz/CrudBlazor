@page "/users/delete"
@inject CrudBlazor.Data.AppDbContext DB
@using CrudBlazor.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Excluir</PageTitle>

<h1>Excluir usuário</h1>

<h3>Tem certeza que deseja excluir este usuário?</h3>
<div>
    <h4>Users</h4>
    <hr />
    @if (users is null)
    {
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@users.Nome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Idade</dt>
            <dd class="col-sm-10">@users.Idade</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CPF</dt>
            <dd class="col-sm-10">@users.CPF</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Endereço</dt>
            <dd class="col-sm-10">@users.Endereco</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CEP</dt>
            <dd class="col-sm-10">@users.CEP</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Cidade</dt>
            <dd class="col-sm-10">@users.Cidade</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Estado</dt>
            <dd class="col-sm-10">@users.Estado</dd>
        </dl>
        <EditForm method="post" Model="users" OnValidSubmit="DeleteUsers" FormName="delete" Enhance>
            <button type="submit" class="btn-danger" disabled="@(users is null)">Excluir</button> |
            <a href="/users">Cancelar</a> 
        </EditForm>
    }
</div>

@code {
    Users? users;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        users = await DB.Usuarios.FirstOrDefaultAsync(m => m.Id == Id);

        if (users is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteUsers()
    {
        DB.Usuarios.Remove(users!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
